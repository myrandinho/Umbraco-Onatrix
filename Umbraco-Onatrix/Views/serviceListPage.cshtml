@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
	Layout = "mainLayout.cshtml";
	ViewBag.Title = Model?.Value("pageTitle") ?? null;

	var selection = Umbraco.Content(Guid.Parse("dc9880ed-a16f-4979-8476-ba0340782bba"))
    .ChildrenOfType("serviceItemTemplate")
    .Where(x => x.IsVisible());

	var itemsPerPage = 6;

	if (!int.TryParse(Context.Request.Query["page"], out int currentPage))
		currentPage = 1;
	
		

	var totalItems = selection?.Count() ?? 0;
	var pagedItems = selection?.Skip((currentPage - 1) * itemsPerPage).Take(itemsPerPage);
}


<section class="our-services">
	<div class="container">
		@if (!string.IsNullOrEmpty(Model.Value("customHeadline").ToString())) {
		<div class="titles">
			<h2>@Model.Value("customHeadline")</h2>
		</div>
		}
		<div class="service-content">
		@if (pagedItems != null){
			@foreach (var item in pagedItems)
			{
				var image = item?.Value<IPublishedContent>("thumbnailImage")?.Url() ?? "";
				var preamble = item?.Value<string>("preamble") ?? "";
				

				<a class="service" href="@item.Url()">
					<div class="service-title">
						<h3>@item.Name</h3>
					</div>
					<img src="@image" alt="@item.Name()">
					<div class="service-info">
						<p>@preamble</p>
					</div>
				</a>
			}
		}	
		</div>
		
		<section class="pagination">
			<div class="container">
				@if (currentPage > 1)
				{
					<a href="?page=@(currentPage - 1)" class="change">PREV</a>
				}
				else
				{
					<span class="change inactive">PREV</span>
				}

				<div class="pages">
				@for (int i = 1; i <= Math.Ceiling((decimal)totalItems / itemsPerPage); i++)
				{
					
					<div class="@(i == currentPage ? "number active" : "number")">
					<a href="?page=@i">@i</a>
					</div>
				}
				</div>

				@if (currentPage < Math.Ceiling((decimal)totalItems / itemsPerPage))
				{
					<a class="change" href="?page=@(currentPage + 1)">NEXT</a>
				}
				else
				{
					<span class="change inactive">NEXT</span>
				}
			</div>
		</section>



	</div>
</section>

@await Html.PartialAsync("partials/static/contactSection1.cshtml")

